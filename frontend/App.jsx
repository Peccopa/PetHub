import React, { useState, useEffect } from 'react';
import './app.css';

export const App = () => {
  // comments ‚Äî —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
  // newComment ‚Äî —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç
  const [comments, setComments] = useState([]);
  const [newComment, setNewComment] = useState('');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
  useEffect(() => {
    fetchComments();
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
  // console.log(process);
  // const API_URL =
  //   process.env.NODE_ENV === 'production'
  //     ? 'https://pethub-backend.onrender.com/comments'
  //     : 'http://localhost:3000/comments';

  // const API_URL = process.env.REACT_APP_API_URL;
  // console.log(API_URL);

  const fetchComments = async () => {
    try {
      const res = await fetch('/comments');
      const data = await res.json();
      setComments(data);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:', err);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!newComment.trim()) return;
    try {
      await fetch('/comments', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ text: newComment }),
      });
      setNewComment(''); // –æ—á–∏—â–∞–µ–º –ø–æ–ª–µ
      fetchComments(); // –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:', err);
    }
  };

  return (
    <div className="container">
      {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å ‚Äî —Ñ–æ—Ç–æ –∫–æ—Ç—ë–Ω–∫–∞ */}
      <div className="image-section">
        <img src="https://placecats.com/400/400" alt="–ö–æ—Ç—ë–Ω–æ–∫" />
        <p className="caption">–ú–∞–ª–µ–Ω—å–∫–∏–π –ø—É—à–∏—Å—Ç–∏–∫ –∂–¥—ë—Ç –≤–∞—à–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ üò∫</p>
      </div>

      {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å ‚Äî –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ —Ñ–æ—Ä–º–∞ */}
      <div className="comments-section">
        <h2>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</h2>

        <div className="comments-list">
          {comments.length > 0 ? (
            comments.map((c) => (
              <div key={c.id} className="comment">
                üó®Ô∏è {c.text}
              </div>
            ))
          ) : (
            <p>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ–∫–∞ –Ω–µ—Ç. –ë—É–¥—å –ø–µ—Ä–≤—ã–º!</p>
          )}
        </div>

        <form onSubmit={handleSubmit} className="comment-form">
          <textarea
            value={newComment}
            onChange={(e) => setNewComment(e.target.value)}
            placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..."
          ></textarea>
          <button type="submit">–ó–∞–ø–æ—Å—Ç–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</button>
        </form>
      </div>
    </div>
  );
};

export default App;
